[env]
framework = arduino
build_unflags=-Werror=all
board_build.filesystem = spiffs
monitor_speed = 115200
monitor_rts = 0
monitor_dtr = 0
board_build.embed_txtfiles = 
  cert/ca-certificates.crt
build_flags = 
	-DCORE_DEBUG_LEVEL=4
	-DCONFIG_ARDUHAL_LOG_COLORS=1
	-DBOARD_HAS_PSRAM
	-DBOARD_HAS_PSRAM_EXT
	-mfix-esp32-psram-cache-issue
	-mfix-esp32-psram-cache-strategy=memw
	-DCONFIG_SPIRAM_CACHE_WORKAROUND
	-DOTA_FIRMWARE_COMPRESSION=1
	-DconfigSUPPORT_DYNAMIC_ALLOCATION=1
	-DCONFIG_CAMERA_JPEG_MODE_FRAME_SIZE_AUTO
	-DCONFIG_ASYNC_TCP_MAX_ACK_TIME=60000
	-DCONFIG_ASYNC_TCP_STACK_SIZE=8096
  -O2                            ; Balance between size and speed
  -ffunction-sections            ; Place functions in separate sections
  -fdata-sections                ; Place data in separate sections
  -Wl,--gc-sections              ; Remove unused sections

[platformio]
src_dir = ./app  ; All source and header files in src/ and subfolders are included automatically

[env:esp32cam]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
board = esp32cam
board_build.mcu = esp32
board_build.f_cpu = 240000000L
board_build.f_flash= 80000000L
board_build.flash_mode = qio
board_build.flash_size = 4MB
upload_protocol = esptool
lib_compat_mode = strict
lib_ldf_mode = chain
lib_deps = 
	olikraus/U8g2@^2.36.5
	esp32async/ESPAsyncWebServer@3.6.2
	ESP32Async/AsyncTCP@^3.3.4
	bblanchon/ArduinoJson@^7.4.1
	links2004/WebSockets@^2.6.1
	madhephaestus/ESP32Servo@^3.0.6
build_flags = 
	${env.build_flags}
	-DCONFIG_IDF_TARGET_ESP32
	-DCAMERA_MODEL_AI_THINKER

[env:esp32s3dev]
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
board = esp32-s3-devkitc1-n16r8
upload_protocol = esptool
lib_compat_mode = strict
lib_ldf_mode = chain
lib_deps = 
	olikraus/U8g2@^2.36.5
	esp32async/ESPAsyncWebServer@3.6.2
	ESP32Async/AsyncTCP@^3.3.4
	bblanchon/ArduinoJson@^7.4.1
	links2004/WebSockets@^2.6.1
	madhephaestus/ESP32Servo@^3.0.6
build_flags = 
	${env.build_flags}